


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Trang Do
    3 00000000         ; Last modification date: 3/22/2022
    4 00000000         
    5 00000000         ; Runs on TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these wri
                       tecommand and writedata
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000         ;**********HiLetgo ST7735 TFT and SDC (SDC not tested)**
                       *****************
   23 00000000         ;ST7735
   24 00000000         ;LED-   (pin 16) TFT, connected to ground
   25 00000000         ;LED+   (pin 15) TFT, connected to +3.3 V
   26 00000000         ;SD_CS  (pin 14) SDC, chip select
   27 00000000         ;MOSI   (pin 13) SDC, MOSI
   28 00000000         ;MISO   (pin 12) SDC, MISO
   29 00000000         ;SCK    (pin 11) SDC, serial clock
   30 00000000         ;CS     (pin 10) TFT, PA3 (SSI0Fss)
   31 00000000         ;SCL    (pin 9)  TFT, SCK  PA2 (SSI0Clk)
   32 00000000         ;SDA    (pin 8)  TFT, MOSI PA5 (SSI0Tx)
   33 00000000         ;A0     (pin 7)  TFT, Data/Command PA6 (GPIO), high for 
                       data, low for command
   34 00000000         ;RESET  (pin 6)  TFT, to PA7 (GPIO)
   35 00000000         ;NC     (pins 3,4,5) not connected
   36 00000000         ;VCC    (pin 2)  connected to +3.3 V
   37 00000000         ;GND    (pin 1)  connected to ground
   38 00000000         
   39 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   40 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   41 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   42 00000000         
   43 00000000                 EXPORT           writecommand
   44 00000000                 EXPORT           writedata
   45 00000000         
   46 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   47 00000000                 THUMB
   48 00000000                 ALIGN



ARM Macro Assembler    Page 2 


   49 00000000         
   50 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   51 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   52 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   53 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   54 00000000         ; lot of data, the FIFOs are not used when writing
   55 00000000         ; commands, and they are used when writing data.  This
   56 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   57 00000000         ; that is actually being transmitted.
   58 00000000         ; The write command operation waits until all data has b
                       een
   59 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   60 00000000         ; the command, and then waits for the transmission to
   61 00000000         ; finish.
   62 00000000         ; The write data operation waits until there is room in 
                       the
   63 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   64 00000000         ; and then adds the data to the transmit FIFO.
   65 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   66 00000000         ; the SSI0 module is not initialized and enabled.
   67 00000000         
   68 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   69 00000000         ; Input: R0  8-bit command to transmit
   70 00000000         ; Output: none
   71 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   72 00000000         writecommand
   73 00000000         ;; --UUU-- Code to write a command to the LCD
   74 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   75 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   76 00000000         ;3) Clear D/C=PA6 to zero
   77 00000000         ;4) Write the command to SSI0_DR_R
   78 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   79 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   80 00000000         
   81 00000000 B531            PUSH             {R0, R4, R5, LR}
   82 00000002         ; Step 1)
   83 00000002 4C13            LDR              R4, =SSI0_SR_R
   84 00000004         command_one
   85 00000004 6825            LDR              R5, [R4]
   86 00000006 F005 0510       AND              R5, #0x10
   87 0000000A         
   88 0000000A         ; Step 2)
   89 0000000A 2D10            CMP              R5, #0x10
   90 0000000C D0FA            BEQ              command_one
   91 0000000E         
   92 0000000E         ; Step 3)
   93 0000000E 4C11            LDR              R4, =GPIO_PORTA_DATA_R



ARM Macro Assembler    Page 3 


   94 00000010 6825            LDR              R5, [R4]
   95 00000012 F025 0540       BIC              R5, #0x40
   96 00000016 6025            STR              R5, [R4]
   97 00000018         
   98 00000018         ; Step 4)
   99 00000018 4C0F            LDR              R4, =SSI0_DR_R
  100 0000001A 7020            STRB             R0, [R4]
  101 0000001C         
  102 0000001C         ; Step 5)
  103 0000001C         command_five
  104 0000001C 4C0C            LDR              R4, =SSI0_SR_R
  105 0000001E 6825            LDR              R5, [R4]
  106 00000020 F005 0510       AND              R5, #0x10
  107 00000024         
  108 00000024         ; Step 6)
  109 00000024 2D10            CMP              R5, #0x10
  110 00000026 D0F9            BEQ              command_five
  111 00000028         
  112 00000028 E8BD 4031       POP              {R0, R4, R5, LR}
  113 0000002C 4770            BX               LR          ;   return
  114 0000002E         
  115 0000002E         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
  116 0000002E         ; Input: R0  8-bit data to transmit
  117 0000002E         ; Output: none
  118 0000002E         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
  119 0000002E         writedata
  120 0000002E         ;; --UUU-- Code to write data to the LCD
  121 0000002E         ;1) Read SSI0_SR_R and check bit 1, 
  122 0000002E         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  123 0000002E         ;3) Set D/C=PA6 to one
  124 0000002E         ;4) Write the 8-bit data to SSI0_DR_R
  125 0000002E         
  126 0000002E B531            PUSH             {R0, R4, R5, LR}
  127 00000030         ; Step 1)
  128 00000030 4C07            LDR              R4, =SSI0_SR_R
  129 00000032         data_SR
  130 00000032 6825            LDR              R5, [R4]
  131 00000034 F005 0502       AND              R5, #0x02
  132 00000038         
  133 00000038         ; Step 2)
  134 00000038 2D00            CMP              R5, #0
  135 0000003A D0FA            BEQ              data_SR
  136 0000003C         
  137 0000003C         ; Step 3)
  138 0000003C 4C05            LDR              R4, =GPIO_PORTA_DATA_R
  139 0000003E 6825            LDR              R5, [R4]
  140 00000040 F045 0540       ORR              R5, #0x40
  141 00000044 6025            STR              R5, [R4]
  142 00000046         
  143 00000046         ; Step 4)
  144 00000046 4C04            LDR              R4, =SSI0_DR_R
  145 00000048 7020            STRB             R0, [R4]
  146 0000004A         
  147 0000004A E8BD 4031       POP              {R0, R4, R5, LR}
  148 0000004E 4770            BX               LR          ;   return
  149 00000050         



ARM Macro Assembler    Page 4 


  150 00000050         
  151 00000050         ;***************************************************
  152 00000050         ; This is a library for the Adafruit 1.8" SPI display.
  153 00000050         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  154 00000050         ; ----> http://www.adafruit.com/products/358
  155 00000050         ; as well as Adafruit raw 1.8" TFT display
  156 00000050         ; ----> http://www.adafruit.com/products/618
  157 00000050         ;
  158 00000050         ; Check out the links above for our tutorials and wiring
                        diagrams
  159 00000050         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  160 00000050         ; interface (RST is optional)
  161 00000050         ; Adafruit invests time and resources providing this ope
                       n source code,
  162 00000050         ; please support Adafruit and open-source hardware by pu
                       rchasing
  163 00000050         ; products from Adafruit!
  164 00000050         ;
  165 00000050         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  166 00000050         ; MIT license, all text above must be included in any re
                       distribution
  167 00000050         ;****************************************************
  168 00000050         
  169 00000050                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  170 00000050                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_FlappyBird -IC:\Users\trang\AppData\Loc
al\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\trang\AppData\Local\
Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1
" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefi
ne="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 46 in file LCD.s
   Uses
      None
Comment: .text unused
command_five 0000001C

Symbol: command_five
   Definitions
      At line 103 in file LCD.s
   Uses
      At line 110 in file LCD.s
Comment: command_five used once
command_one 00000004

Symbol: command_one
   Definitions
      At line 84 in file LCD.s
   Uses
      At line 90 in file LCD.s
Comment: command_one used once
data_SR 00000032

Symbol: data_SR
   Definitions
      At line 129 in file LCD.s
   Uses
      At line 135 in file LCD.s
Comment: data_SR used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 72 in file LCD.s
   Uses
      At line 43 in file LCD.s
Comment: writecommand used once
writedata 0000002E

Symbol: writedata
   Definitions
      At line 119 in file LCD.s
   Uses
      At line 44 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 39 in file LCD.s
   Uses
      At line 93 in file LCD.s
      At line 138 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 40 in file LCD.s
   Uses
      At line 99 in file LCD.s
      At line 144 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 41 in file LCD.s
   Uses
      At line 83 in file LCD.s
      At line 104 in file LCD.s
      At line 128 in file LCD.s

3 symbols
345 symbols in table
